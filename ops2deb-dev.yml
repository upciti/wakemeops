- name: clog-cli
  version: 0.9.3
  homepage: https://github.com/clog-tool/clog-cli
  summary: generate beautiful changelogs from your Git commit history
  description: |-
    clog creates a changelog automatically from your local git metadata. The way
    this works, is every time you make a commit, you ensure your commit subject
    line follows the conventional format. Then when you wish to update your
    changelog, you simply run clog inside your local repository with any options
    you'd like to specify.
  depends:
    - git
  fetch:
    url: https://github.com/clog-tool/clog-cli/releases/download/v{{version}}/clog-v{{version}}-{{target|rust_target}}.tar.gz
    sha256:
      amd64: c878d73e0f22fea2f2fd8da53e3cf987a88e50f474649e026ad196b67d8a0401
      armhf: 12e4b84972b5dac3e7334d9938da806295ca0f5b0b008833a4ed728d35fb1d3c
      arm64: 1e90b8ab5906c17a2f8a59c1a815afd0dbdcb9fc9d0848dec350481ceb99d473
    targets:
      armhf: armv7-unknown-linux-gnueabihf
  install:
    - clog:/usr/bin/

- name: coursier
  version: 2.1.0-RC2
  homepage: https://get-coursier.io/
  summary: Scala application and artifact manager
  description: |-
    Coursier can install Scala applications and setup your Scala development
    environment. It can also download and cache artifacts from the web. Once
    installed, the main usage of coursier is through its command-line tool cs. Its
    features include:

    - Install additional Scala applications.
    - Launch Scala applications.
    - Create standalone launchers for Scala applications.
  conflicts:
    - csound
  fetch:
    url: https://github.com/coursier/coursier/releases/download/v{{version}}/cs-x86_64-pc-linux.gz
    sha256: de0ec8dd59269c973083a35992986a6b2a71ff0f6f1aa01f238c01d09626dff3
  install:
    - cs-x86_64-pc-linux:/usr/bin/cs

- name: datanymizer
  version: 0.6.0
  homepage: https://github.com/datanymizer/datanymizer
  summary: powerful postgres database anonymizer with flexible rules
  description: |-
    Datanymizer generates database-native dump. You can import or process your dump
    with supported database without 3rd-party importers.
    Datanymizer is created & supported by Evrone.
  fetch:
    url: https://github.com/datanymizer/datanymizer/releases/download/v{{version}}/pg_datanymizer-linux-x86_64.tar.gz
    sha256: e255a2caf6a43b40df479bf20511e3897118967b55e8b31f0f31de24de273e92
  install:
    - pg_datanymizer:/usr/bin/

- name: github-cli
  version: 2.20.2
  homepage: https://github.com/cli/cli
  summary: GitHub on the command line
  description: |-
    Brings pull requests, issues, and other GitHub concepts to the terminal next to
    where you are already working with git and your code.
  fetch:
    url: https://github.com/cli/cli/releases/download/v{{version}}/gh_{{version}}_linux_{{target}}.tar.gz
    sha256:
      amd64: 3bc7cd3b2fd9082218b8246595673f55badb351db1b9e627eec121beb8b26450
      armhf: 46efb77e397e4a995096dfca3dd2619d087fa7b6f14e3e58ff290b3f7690c951
      arm64: c9aaa99fd4496be714738620931559f5bab3edc343ea87bbb070d97a1a780554
    targets:
      armhf: armv6
  script:
    - mv gh_{{version}}_linux_*/bin/* {{src}}/usr/bin/
    - mv gh_{{version}}_linux_*/share/* {{src}}/usr/share/

- name: github-hub
  version: 2.14.2
  homepage: https://hub.github.com
  revision: 2
  summary: do everyday GitHub tasks without ever leaving the terminal
  description: |-
    hub is a command line tool that wraps git in order to extend it with extra
    features and commands that make working with GitHub easier.
  fetch:
    url: https://github.com/github/hub/releases/download/v{{version}}/hub-linux-{{goarch}}-{{version}}.tgz
    sha256:
      amd64: 74d95fdfb3c78c8af4e2025b04b916ad905ab99a361778500d58269847c7922d
      armhf: 234fa4cfcfdf1fc4051b27116fd1351a1741cfec556fa227506708ba4997bdeb
      arm64: 53670fe3ed3d590dc1194257497c7b27b35daf2bfb5b497b1a49e50b3f5a0e61
  install:
    - hub-linux-{{goarch}}-{{version}}/bin/hub:/usr/bin/

- name: glab
  version: 1.23.1
  homepage: https://glab.readthedocs.io/
  summary: Gitlab on the command line
  description: |-
    Bring GitLab to your terminal right next to where you're already working with
    git and your code without switching between browser windows or tabs. Work with
    issues, merge requests, look at running pipelines directly from your CLI, among
    other features.
  fetch:
    url: https://gitlab.com/gitlab-org/cli/-/releases/v{{version}}/downloads/glab_{{version}}_Linux_{{target}}.deb
    sha256:
      amd64: 907ae5622d6e2b74115b571ef711a118ddf86a305912d7acefb2f86032ae678b
      arm64: 07f1e94284f56c467a7d48514879702345e4fcf739ba0935dc13aeac2f2da425
    targets:
      amd64: x86_64
  install:
    - data/usr/bin/glab:/usr/bin/

- name: hugo
  version: 0.107.0
  homepage: https://gohugo.io/
  summary: fast and flexible Static Site Generator
  description: |-
    Hugo is a static site generator written in Go. It is optimized for speed, ease
    of use, and configurability. Hugo takes a directory with content and templates,
    and renders them into a full HTML website.

    Hugo relies on Markdown files with front matter for meta data. And you can run
    Hugo from any directory. This works well for shared hosts and other systems
    where you don’t have a privileged account.

    Hugo renders a typical website of moderate size in a fraction of a second. A
    good rule of thumb is that each piece of content renders in around 1
    millisecond.

    Hugo is meant to work well for any kind of website including blogs, tumblelogs
    and docs.
  fetch:
    url: https://github.com/gohugoio/hugo/releases/download/v{{version}}/hugo_{{version}}_Linux-{{target|goarch}}.tar.gz
    sha256:
      amd64: 042c9b4d0ddff26bd700757b8f939b8d495da4e6fa49a8e8c9d31a5b3c9935bf
      armhf: bb151c243ed69254a59fb79a339e2fb2df32fc7b21e72b8222111f55d81675ee
      arm64: d81a2023dcf760c13153a7c5408a5203beed2951aa6e4b7c35c3a77b97732ddc
    targets:
      amd64: 64bit
  install:
    - hugo:/usr/bin/

- name: influx-cli
  version: 2.5.0
  homepage: https://docs.influxdata.com/influxdb/latest/tools/influx-cli/?t=Linux
  summary: command line client for influxdb
  description: |-
    Use the influx CLI to interact with and manage your InfluxDB instance. Write
    and query data, generate InfluxDB templates, export data, and more.
  fetch:
    url: https://dl.influxdata.com/influxdb/releases/influxdb2-client-{{version}}-linux-{{goarch}}.tar.gz
    sha256:
      amd64: e397b659b381f7f5e881e6ccd9b133650b90184987c3dddcebfcd0f8ca3c5a56
      arm64: 3fb8f788493e5f398e03b0b61594d44e3337d6bf6c98974337b119810f6ac48a
  install:
    - influxdb2-client-{{version}}-linux-{{goarch}}/influx:/usr/bin/

- name: mask
  version: 0.11.2
  homepage: https://github.com/jakedeichert/mask
  summary: command-line task runner defined by a simple markdown file
  description: |-
    mask is a CLI task runner which is defined by a simple markdown file. It
    searches for a maskfile.md in the current directory which it then parses for
    commands and arguments.
  fetch:
    url: https://github.com/jakedeichert/mask/releases/download/v{{version}}/mask-v{{version}}-x86_64-unknown-linux-gnu.zip
    sha256: b9e484ab3d949452fe1ae4806ef141fc6d4c2ce884503b505875994ec459c54c
  install:
    - mask-v{{version}}-x86_64-unknown-linux-gnu/mask:/usr/bin/

- name: poetry
  version: 1.1.15
  homepage: https://python-poetry.org
  arch: all
  summary: tool for dependency management and packaging in Python
  description: |-
    Poetry helps you declare, manage and install dependencies of Python projects,
    ensuring you have the right stack everywhere.
  depends:
    - libc6
    - python3
    - python3-distutils
  fetch:
    url: https://github.com/python-poetry/poetry/releases/download/{{version}}/poetry-{{version}}-linux.tar.gz
    sha256: 1c7e6a5175dbabe240cf10fd8167f31a07c404d7cd0b55cb5c68c160049cf486
  install:
    - path: /usr/bin/poetry
      content: |
        #!/usr/bin/env python3
        # -*- coding: utf-8 -*-
        import glob
        import sys
        import os
        lib = os.path.normpath(os.path.join(os.path.realpath(__file__), "../..", "lib"))
        vendors = os.path.join(lib, "poetry", "_vendor")
        current_vendors = os.path.join(
            vendors, "py{}".format(".".join(str(v) for v in sys.version_info[:2]))
        )
        sys.path.insert(0, lib)
        sys.path.insert(0, current_vendors)
        if __name__ == "__main__":
            from poetry.console import main
            main()
    - path: debian/postinst
      content: |
        #!/bin/sh
        set -e
        if which py3compile >/dev/null 2>&1; then
          py3compile -p poetry
        fi
    - path: debian/prerm
      content: |
        #!/bin/sh
        set -e
        if which py3clean >/dev/null 2>&1; then
          py3clean -p poetry
        fi
  script:
    - rm -r poetry/_vendor/py2.7 poetry/_vendor/py3.5 poetry/_vendor/py3.6 poetry/_vendor/.gitignore
    - mv poetry {{src}}/usr/lib/

- name: pre-commit
  version: 2.20.0
  homepage: https://pre-commit.com/
  revision: 2
  arch: all
  summary: framework for managing and maintaining multi-language pre-commit hooks
  description: |-
    Multi-language package manager for pre-commit hooks. You specify a list of
    hooks you want and pre-commit manages the installation and execution of any
    hook written in any language before every commit. pre-commit is specifically
    designed to not require root access. If one of your developers doesn’t have
    node installed but modifies a JavaScript file, pre-commit automatically handles
    downloading and building node to run eslint without root.
  depends:
    - python3
  fetch:
    url: https://github.com/pre-commit/pre-commit/releases/download/v{{version}}/pre-commit-{{version}}.pyz
    sha256: 83afdec9f97cbb1d2a2fd7eae645ab732e9f7a3b60cfe499269fec03fb836c42
  install:
    - pre-commit-{{version}}.pyz:/usr/lib/pre-commit/pre-commit.pyz
    - path: /usr/bin/pre-commit
      content: |
        #!/usr/bin/env sh
        exec python3 /usr/lib/pre-commit/pre-commit.pyz $@

- name: pyenv
  version: 2.3.7
  homepage: https://github.com/pyenv/pyenv
  arch: all
  summary: simple Python version management
  description: |-
    Tool that lets you easily switch between multiple versions of Python. It's
    simple, unobtrusive, and follows the UNIX tradition of single-purpose tools
    that do one thing well.
  depends:
    - make
    - build-essential
    - libssl-dev
    - zlib1g-dev
    - libbz2-dev
    - libreadline-dev
    - libsqlite3-dev
    - wget
    - curl
    - llvm
    - libncursesw5-dev
    - xz-utils
    - tk-dev
    - libxml2-dev
    - libxmlsec1-dev
    - libffi-dev
    - liblzma-dev
  fetch:
    url: https://github.com/pyenv/pyenv/archive/refs/tags/v{{version}}.zip
    sha256: 6d4822fa9318d61c27d6ba8d9f8d2b779d42400b44350c7b2ae33b0c6e630039
  install:
    - path: /etc/profile.d/ops2deb-pyenv.sh
      content: if [[ -f /usr/bin/pyenv ]]; then eval "$(pyenv init --path)"; fi
  script:
    - mv pyenv-{{version}} {{src}}/usr/lib/pyenv
    - chmod +x {{src}}/usr/lib/pyenv/libexec/* {{src}}/usr/lib/pyenv/plugins/python-build/bin/*
    - ln -s /usr/lib/pyenv/libexec/pyenv {{src}}/usr/bin/pyenv

- name: pyoxidizer
  version: 0.18.0
  homepage: https://pyoxidizer.readthedocs.io/en/latest/index.html
  revision: 2
  summary: utility for producing binaries that embed Python
  description: |-
    The over-arching goal of PyOxidizer is to make complex packaging and
    distribution problems simple so application maintainers can focus on building
    applications instead of toiling with build systems and packaging tools.
  fetch:
    url: https://github.com/indygreg/PyOxidizer/releases/download/pyoxidizer%2F{{version}}/pyoxidizer-{{version}}-linux-x86_64.zip
    sha256: 77d4b1528981c25e6fb02ecd142990460a7e846789102462d9e42215de049914
  install:
    - pyoxidizer:/usr/bin/

- name: scala-cli
  version: 0.1.18
  homepage: https://scala-cli.virtuslab.org/
  summary: command-line tool to interact with the Scala language
  description: |-
    Scala CLI is an experimental tool to run/compile/test Scala that aims at being
    a better scala command. It shares some similarities with build tools, but
    doesn't aim at supporting multi-module projects, nor to be extended via a task
    system.
  fetch:
    url: https://github.com/VirtusLab/scala-cli/releases/download/v{{version}}/scala-cli-x86_64-pc-linux.deb
    sha256: c12d19ad02453fe88e845941e04470887b60c600b71420a6c6687990dfe5ca53
  install:
    - data/usr/share/scala/scala-cli:/usr/bin/scala-cli
