- name: clog-cli
  version: 0.9.3
  homepage: https://github.com/clog-tool/clog-cli
  summary: generate beautiful changelogs from your Git commit history
  description: |-
    clog creates a changelog automatically from your local git metadata. The way
    this works, is every time you make a commit, you ensure your commit subject
    line follows the conventional format. Then when you wish to update your
    changelog, you simply run clog inside your local repository with any options
    you'd like to specify.
  depends:
    - git
  fetch:
    url: https://github.com/clog-tool/clog-cli/releases/download/v{{version}}/clog-v{{version}}-{{target}}.tar.gz
    sha256:
      amd64: c878d73e0f22fea2f2fd8da53e3cf987a88e50f474649e026ad196b67d8a0401
      armhf: 12e4b84972b5dac3e7334d9938da806295ca0f5b0b008833a4ed728d35fb1d3c
      arm64: 1e90b8ab5906c17a2f8a59c1a815afd0dbdcb9fc9d0848dec350481ceb99d473
    targets:
      amd64: x86_64-unknown-linux-gnu
      armhf: armv7-unknown-linux-gnueabihf
      arm64: aarch64-unknown-linux-gnu
  script:
    - install -m 755 clog {{src}}/usr/bin/

- name: datanymizer
  version: 0.5.1
  homepage: https://github.com/datanymizer/datanymizer
  revision: 2
  summary: powerful postgres database anonymizer with flexible rules
  description: |-
    Datanymizer generates database-native dump. You can import or process your dump
    with supported database without 3rd-party importers.
    Datanymizer is created & supported by Evrone.
  fetch:
    url: https://github.com/datanymizer/datanymizer/releases/download/v{{version}}/pg_datanymizer-linux-x86_64.tar.gz
    sha256: cc5fdb12f0bf2cb64e01c28f61aac24db7836cf03898b79d9cf3712874419c9a
  script:
    - mv pg_datanymizer {{src}}/usr/bin/

- name: github-cli
  version: 2.5.0
  homepage: https://github.com/cli/cli
  revision: 2
  summary: GitHub on the command line
  description: |-
    Brings pull requests, issues, and other GitHub concepts to the terminal next to
    where you are already working with git and your code.
  fetch:
    url: https://github.com/cli/cli/releases/download/v{{version}}/gh_{{version}}_linux_{{target}}.tar.gz
    sha256:
      amd64: 4390bc476cc79c33346be3e0098cfbb3afe2257006fcd38765ef83569df11a0f
      armhf: 44e44829a5361957217bfd7c2c8c6dc88fc5f56a72f2e4df772e0ea551a493bd
      arm64: 45cf80192438846315014494346d534a881baebcb85822dacf6da7d73cc866a3
    targets:
      amd64: amd64
      armhf: armv6
      arm64: arm64
  script:
    - mv gh_{{version}}_linux_*/bin/* {{src}}/usr/bin/
    - mv gh_{{version}}_linux_*/share/* {{src}}/usr/share/

- name: mask
  version: 0.11.0
  homepage: https://github.com/jakedeichert/mask
  revision: 2
  summary: command-line task runner defined by a simple markdown file
  description: |-
    mask is a CLI task runner which is defined by a simple markdown file. It
    searches for a maskfile.md in the current directory which it then parses for
    commands and arguments.
  fetch:
    url: https://github.com/jakedeichert/mask/releases/download/v{{version}}/mask-v{{version}}-x86_64-unknown-linux-gnu.zip
    sha256: 1247a00b9ecca1818d39672ca412c8a9df9e99940152f3a8fdb51b253d2ddb19
  script:
    - mv mask-v{{version}}-x86_64-unknown-linux-gnu/mask {{src}}/usr/bin/

- name: poetry
  version: 1.1.12
  homepage: https://python-poetry.org
  summary: tool for dependency management and packaging in Python
  description: |-
    Poetry helps you declare, manage and install dependencies of Python projects,
    ensuring you have the right stack everywhere.
  depends:
    - libc6
    - python3
    - python3-distutils
  fetch:
    url: https://github.com/python-poetry/poetry/releases/download/{{version}}/poetry-{{version}}-linux.tar.gz
    sha256: e85f81b21cb0731591a1a957371cacd0e8ed4a951e63f5021c81eb2c2bd2c0ff
  script:
    - rm -r poetry/_vendor/py2.7 poetry/_vendor/py3.5 poetry/_vendor/py3.6 poetry/_vendor/.gitignore
    - mv poetry {{src}}/usr/lib/
    - |-
      cat << EOF >> {{src}}/usr/bin/poetry
      #!/usr/bin/env python3
      # -*- coding: utf-8 -*-
      import glob
      import sys
      import os

      lib = os.path.normpath(os.path.join(os.path.realpath(__file__), "../..", "lib"))
      vendors = os.path.join(lib, "poetry", "_vendor")
      current_vendors = os.path.join(
          vendors, "py{}".format(".".join(str(v) for v in sys.version_info[:2]))
      )

      sys.path.insert(0, lib)
      sys.path.insert(0, current_vendors)

      if __name__ == "__main__":
          from poetry.console import main

          main()
      EOF
    - |-
      cat << EOF >> {{src}}/../debian/postinst
      #!/bin/sh
      set -e
      if which py3compile >/dev/null 2>&1; then
        py3compile -p poetry
      fi
      EOF
    - |-
      cat << EOF >> {{src}}/../debian/prerm
      #!/bin/sh
      set -e
      if which py3clean >/dev/null 2>&1; then
        py3clean -p poetry
      fi

- name: pyenv
  version: 2.2.4-1
  homepage: https://github.com/pyenv/pyenv
  arch: all
  summary: simple Python version management
  description: |-
    Tool that lets you easily switch between multiple versions of Python. It's
    simple, unobtrusive, and follows the UNIX tradition of single-purpose tools
    that do one thing well.
  depends:
    - make
    - build-essential
    - libssl-dev
    - zlib1g-dev
    - libbz2-dev
    - libreadline-dev
    - libsqlite3-dev
    - wget
    - curl
    - llvm
    - libncursesw5-dev
    - xz-utils
    - tk-dev
    - libxml2-dev
    - libxmlsec1-dev
    - libffi-dev
    - liblzma-dev
  fetch:
    url: https://github.com/pyenv/pyenv/archive/refs/tags/v{{version}}.zip
    sha256: 6e5e8223de00c28b8ab5de89bf8a7a12e944d0d1a1570682a7bc102538833da2
  script:
    - mv pyenv-{{version}} {{src}}/usr/lib/pyenv
    - ln -s /usr/lib/pyenv/libexec/pyenv {{src}}/usr/bin/pyenv
    - install -d 755 {{src}}/etc/profile.d/
    - echo 'if [[ -f /usr/bin/pyenv ]]; then eval "$(pyenv init --path)"; fi' > {{src}}/etc/profile.d/ops2deb-pyenv.sh
    - chmod 755 {{src}}/etc/profile.d/ops2deb-pyenv.sh

- name: pyoxidizer
  version: 0.18.0
  homepage: https://pyoxidizer.readthedocs.io/en/latest/index.html
  revision: 2
  summary: utility for producing binaries that embed Python
  description: |-
    The over-arching goal of PyOxidizer is to make complex packaging and
    distribution problems simple so application maintainers can focus on building
    applications instead of toiling with build systems and packaging tools.
  fetch:
    url: https://github.com/indygreg/PyOxidizer/releases/download/pyoxidizer%2F{{version}}/pyoxidizer-{{version}}-linux-x86_64.zip
    sha256: 77d4b1528981c25e6fb02ecd142990460a7e846789102462d9e42215de049914
  script:
    - mv pyoxidizer {{src}}/usr/bin/pyoxidizer
