- name: clog-cli
  matrix:
    architectures:
      - amd64
      - armhf
      - arm64
  version: 0.9.3
  homepage: https://github.com/clog-tool/clog-cli
  summary: generate beautiful changelogs from your Git commit history
  description: |-
    clog creates a changelog automatically from your local git metadata. The way
    this works, is every time you make a commit, you ensure your commit subject
    line follows the conventional format. Then when you wish to update your
    changelog, you simply run clog inside your local repository with any options
    you'd like to specify.
  depends:
    - git
  fetch:
    url: https://github.com/clog-tool/clog-cli/releases/download/v{{version}}/clog-v{{version}}-{{target|rust_target}}.tar.gz
    targets:
      armhf: armv7-unknown-linux-gnueabihf
  install:
    - clog:/usr/bin/

- name: coursier
  version: 2.1.0-RC6
  homepage: https://get-coursier.io/
  summary: Scala application and artifact manager
  description: |-
    Coursier can install Scala applications and setup your Scala development
    environment. It can also download and cache artifacts from the web. Once
    installed, the main usage of coursier is through its command-line tool cs. Its
    features include:

    - Install additional Scala applications.
    - Launch Scala applications.
    - Create standalone launchers for Scala applications.
  conflicts:
    - csound
  fetch: https://github.com/coursier/coursier/releases/download/v{{version}}/cs-x86_64-pc-linux.gz
  install:
    - cs-x86_64-pc-linux:/usr/bin/cs

- name: datanymizer
  version: 0.6.0
  homepage: https://github.com/datanymizer/datanymizer
  summary: powerful postgres database anonymizer with flexible rules
  description: |-
    Datanymizer generates database-native dump. You can import or process your dump
    with supported database without 3rd-party importers.
    Datanymizer is created & supported by Evrone.
  fetch: https://github.com/datanymizer/datanymizer/releases/download/v{{version}}/pg_datanymizer-linux-x86_64.tar.gz
  install:
    - pg_datanymizer:/usr/bin/

- name: github-cli
  matrix:
    architectures:
      - amd64
      - armhf
      - arm64
  version: 2.23.0
  homepage: https://github.com/cli/cli
  summary: GitHub on the command line
  description: |-
    Brings pull requests, issues, and other GitHub concepts to the terminal next to
    where you are already working with git and your code.
  fetch:
    url: https://github.com/cli/cli/releases/download/v{{version}}/gh_{{version}}_linux_{{target}}.tar.gz
    targets:
      armhf: armv6
  script:
    - mv gh_{{version}}_linux_*/bin/* {{src}}/usr/bin/
    - mv gh_{{version}}_linux_*/share/* {{src}}/usr/share/

- name: github-hub
  matrix:
    architectures:
      - amd64
      - armhf
      - arm64
  version: 2.14.2
  revision: 2
  homepage: https://hub.github.com
  summary: do everyday GitHub tasks without ever leaving the terminal
  description: |-
    hub is a command line tool that wraps git in order to extend it with extra
    features and commands that make working with GitHub easier.
  fetch: https://github.com/github/hub/releases/download/v{{version}}/hub-linux-{{goarch}}-{{version}}.tgz
  install:
    - hub-linux-{{goarch}}-{{version}}/bin/hub:/usr/bin/

- name: glab
  matrix:
    architectures:
      - amd64
      - arm64
  version: 1.25.0
  homepage: https://glab.readthedocs.io/
  summary: Gitlab on the command line
  description: |-
    Bring GitLab to your terminal right next to where you're already working with
    git and your code without switching between browser windows or tabs. Work with
    issues, merge requests, look at running pipelines directly from your CLI, among
    other features.
  fetch:
    url: https://gitlab.com/gitlab-org/cli/-/releases/v{{version}}/downloads/glab_{{version}}_Linux_{{target}}.deb
    targets:
      amd64: x86_64
  install:
    - data/usr/bin/glab:/usr/bin/

- name: hugo
  matrix:
    architectures:
      - amd64
      - armhf
      - arm64
  version: 0.110.0
  homepage: https://gohugo.io/
  summary: fast and flexible Static Site Generator
  description: |-
    Hugo is a static site generator written in Go. It is optimized for speed, ease
    of use, and configurability. Hugo takes a directory with content and templates,
    and renders them into a full HTML website.

    Hugo relies on Markdown files with front matter for meta data. And you can run
    Hugo from any directory. This works well for shared hosts and other systems
    where you don’t have a privileged account.

    Hugo renders a typical website of moderate size in a fraction of a second. A
    good rule of thumb is that each piece of content renders in around 1
    millisecond.

    Hugo is meant to work well for any kind of website including blogs, tumblelogs
    and docs.
  fetch:
    url: https://github.com/gohugoio/hugo/releases/download/v{{version}}/hugo_{{version}}_Linux-{{target|goarch}}.tar.gz
    targets:
      amd64: 64bit
  install:
    - hugo:/usr/bin/

- name: influx-cli
  matrix:
    architectures:
      - amd64
      - arm64
  version: 2.6.1
  homepage: https://docs.influxdata.com/influxdb/latest/tools/influx-cli/?t=Linux
  summary: command line client for influxdb
  description: |-
    Use the influx CLI to interact with and manage your InfluxDB instance. Write
    and query data, generate InfluxDB templates, export data, and more.
  fetch: https://dl.influxdata.com/influxdb/releases/influxdb2-client-{{version}}-linux-{{goarch}}.tar.gz
  install:
    - influxdb2-client-{{version}}-linux-{{goarch}}/influx:/usr/bin/

- name: mask
  version: 0.11.3
  homepage: https://github.com/jakedeichert/mask
  summary: command-line task runner defined by a simple markdown file
  description: |-
    mask is a CLI task runner which is defined by a simple markdown file. It
    searches for a maskfile.md in the current directory which it then parses for
    commands and arguments.
  fetch: https://github.com/jakedeichert/mask/releases/download/v{{version}}/mask-v{{version}}-x86_64-unknown-linux-gnu.zip
  install:
    - mask-v{{version}}-x86_64-unknown-linux-gnu/mask:/usr/bin/

- name: poetry
  version: 1.1.15
  revision: 2
  architecture: all
  homepage: https://python-poetry.org
  summary: tool for dependency management and packaging in Python
  description: |-
    Poetry helps you declare, manage and install dependencies of Python projects,
    ensuring you have the right stack everywhere.
  depends:
    - libc6
    - python3
    - python3-distutils
  fetch: https://github.com/python-poetry/poetry/releases/download/{{version}}/poetry-{{version}}-linux.tar.gz
  install:
    - path: /usr/bin/poetry
      content: |
        #!/usr/bin/python3
        # -*- coding: utf-8 -*-
        import glob
        import sys
        import os
        lib = os.path.normpath(os.path.join(os.path.realpath(__file__), "../..", "lib"))
        vendors = os.path.join(lib, "poetry", "_vendor")
        current_vendors = os.path.join(
            vendors, "py{}".format(".".join(str(v) for v in sys.version_info[:2]))
        )
        sys.path.insert(0, lib)
        sys.path.insert(0, current_vendors)
        if __name__ == "__main__":
            from poetry.console import main
            main()
    - path: debian/postinst
      content: |
        #!/bin/sh
        set -e
        if which py3compile >/dev/null 2>&1; then
          py3compile -p poetry
        fi
    - path: debian/prerm
      content: |
        #!/bin/sh
        set -e
        if which py3clean >/dev/null 2>&1; then
          py3clean -p poetry
        fi
  script:
    - rm -r poetry/_vendor/py2.7 poetry/_vendor/py3.5 poetry/_vendor/py3.6 poetry/_vendor/.gitignore
    - mv poetry {{src}}/usr/lib/

- name: pre-commit
  version: 3.1.1
  architecture: all
  homepage: https://pre-commit.com/
  summary: framework for managing and maintaining multi-language pre-commit hooks
  description: |-
    Multi-language package manager for pre-commit hooks. You specify a list of
    hooks you want and pre-commit manages the installation and execution of any
    hook written in any language before every commit. pre-commit is specifically
    designed to not require root access. If one of your developers doesn’t have
    node installed but modifies a JavaScript file, pre-commit automatically handles
    downloading and building node to run eslint without root.
  depends:
    - python3
  fetch: https://github.com/pre-commit/pre-commit/releases/download/v{{version}}/pre-commit-{{version}}.pyz
  install:
    - pre-commit-{{version}}.pyz:/usr/lib/pre-commit/pre-commit.pyz
    - path: /usr/bin/pre-commit
      content: |
        #!/usr/bin/env sh
        exec python3 /usr/lib/pre-commit/pre-commit.pyz $@

- name: pyenv
  version: 2.3.14
  architecture: all
  homepage: https://github.com/pyenv/pyenv
  summary: simple Python version management
  description: |-
    Tool that lets you easily switch between multiple versions of Python. It's
    simple, unobtrusive, and follows the UNIX tradition of single-purpose tools
    that do one thing well.
  depends:
    - make
    - build-essential
    - libssl-dev
    - zlib1g-dev
    - libbz2-dev
    - libreadline-dev
    - libsqlite3-dev
    - wget
    - curl
    - llvm
    - libncursesw5-dev
    - xz-utils
    - tk-dev
    - libxml2-dev
    - libxmlsec1-dev
    - libffi-dev
    - liblzma-dev
  fetch: https://github.com/pyenv/pyenv/archive/refs/tags/v{{version}}.zip
  install:
    - path: /etc/profile.d/ops2deb-pyenv.sh
      content: if [[ -f /usr/bin/pyenv ]]; then eval "$(pyenv init --path)"; fi
  script:
    - mv pyenv-{{version}} {{src}}/usr/lib/pyenv
    - chmod +x {{src}}/usr/lib/pyenv/libexec/* {{src}}/usr/lib/pyenv/plugins/python-build/bin/*
    - ln -s /usr/lib/pyenv/libexec/pyenv {{src}}/usr/bin/pyenv

- name: pyoxidizer
  matrix:
    architectures:
      - amd64
      - arm64
  version: 0.24.0
  homepage: https://pyoxidizer.readthedocs.io/en/latest/index.html
  summary: utility for producing binaries that embed Python
  description: |-
    The over-arching goal of PyOxidizer is to make complex packaging and
    distribution problems simple so application maintainers can focus on building
    applications instead of toiling with build systems and packaging tools.
  fetch:
    url: https://github.com/indygreg/PyOxidizer/releases/download/pyoxidizer%2F{{version}}/pyoxidizer-{{version}}-{{target}}.tar.gz
    targets:
      amd64: x86_64-unknown-linux-musl
      arm64: aarch64-unknown-linux-musl
  install:
    - pyoxidizer-{{version}}-{{target}}/pyoxidizer:/usr/bin/

- name: scala-cli
  version: 0.2.0
  homepage: https://scala-cli.virtuslab.org/
  summary: command-line tool to interact with the Scala language
  description: |-
    Scala CLI is an experimental tool to run/compile/test Scala that aims at being
    a better scala command. It shares some similarities with build tools, but
    doesn't aim at supporting multi-module projects, nor to be extended via a task
    system.
  fetch: https://github.com/VirtusLab/scala-cli/releases/download/v{{version}}/scala-cli-x86_64-pc-linux.deb
  install:
    - data/usr/share/scala/scala-cli:/usr/bin/scala-cli
