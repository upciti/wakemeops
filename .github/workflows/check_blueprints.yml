name: üßê Check blueprints

on:
  pull_request:

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      ops2deb: ${{ steps.filter.outputs.ops2deb }}
    steps:
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            ops2deb:
              - 'ops2deb-*.yml'

      - name: Clean up labels
        uses: actions-ecosystem/action-remove-labels@v1
        if: success()
        with:
          labels: |
            build failed
            tests failed
          fail_on_error: false

  build_packages:
    needs: [changes]
    if: ${{ needs.changes.outputs.ops2deb == 'true' }}
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/upciti/ops2deb:latest
      options: --user 1001
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Print ops2deb version
        run: ops2deb version

      - name: Validate configuration files
        run: make format

      - name: Generate new Debian packages
        run: |
          make generate
          make build

      - name: Set build failed label on failure
        uses: actions-ecosystem/action-add-labels@v1
        if: failure()
        with:
          labels: build failed

      - name: Upload Debian packages
        uses: actions/upload-artifact@v2
        with:
          path: build/**/*deb
          retention-days: 2

  test_packages:
    needs: [build_packages]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distribution:
          - debian:bookworm-slim
          - debian:bullseye-slim
          - debian:buster-slim
          - ubuntu:rolling
          - ubuntu:20.04
          - ubuntu:18.04
          - minideb:bullseye
          - minideb:buster
    container: wakemeops/${{ matrix.distribution }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download Debian packages
        uses: actions/download-artifact@v2
        with:
          path: build

      - name: Install make
        run: install_packages make

      - name: Test packages
        run: |
          make install-packages
          make check-packages

      - name: Set tests failed label on failure
        uses: actions-ecosystem/action-add-labels@v1
        if: failure()
        with:
          labels: tests failed

  test_packages_success:
    runs-on: ubuntu-latest
    needs: [test_packages, build_packages]
    if: always()
    steps:
      - uses: docker://agilepathway/pull-request-label-checker:latest
        with:
          none_of: build failed,tests failed
          repo_token: ${{ secrets.GITHUB_TOKEN }}
