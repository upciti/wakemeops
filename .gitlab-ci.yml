workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

default:
  tags: ["wakemebot"]

stages:
  - build
  - push
  - publish

.no_schedule:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - changes:
        - ops2deb-*.yml
      when: on_success

.prod_no_schedule:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
      changes:
        - ops2deb-*.yml
      when: on_success

.parallel_component:
  parallel:
    matrix:
      - component: desktop
      - component: dev
      - component: devops
      - component: secops
      - component: terminal

.parallel_distro:
  parallel:
    matrix:
      - DISTRO: ubuntu
        VERSION: ["latest", "rolling", "20.04", "18.04"]
      - DISTRO: debian
        VERSION:
          ["latest", "bookworm", "bookworm-slim", "bullseye", "bullseye-slim", "buster", "buster-slim"]

generate_packages:
  image: ghcr.io/upciti/ops2deb:latest
  stage: build
  extends:
    - .no_schedule
    - .parallel_component
  script:
    - make generate-${component}
    - make build-${component}
  artifacts:
    paths:
      - build/**/*deb
    expire_in: 2 days

push_packages:
  image: upciti/wakemebot:latest
  stage: push
  extends:
    - .prod_no_schedule
    - .parallel_component
  script:
    - make push-${component}

publish_s3:
  image: upciti/wakemebot:latest
  stage: publish
  extends: .prod_no_schedule
  script:
    - make publish

build_images:
  image: quay.io/buildah/stable:v1.23.1
  stage: publish
  tags: ["docker"]
  needs: []
  variables:
    REGISTRY_USER: "wakemeops"
  parallel:
    matrix:
      - IMAGE: ubuntu
        TAG: ["latest", "rolling", "20.04", "18.04"]
        REGISTRY_NAME: ubuntu
      - IMAGE: debian
        TAG: ["latest", "bookworm", "bookworm-slim", "bullseye", "bullseye-slim", "buster", "buster-slim"]
        REGISTRY_NAME: debian
      - IMAGE: bitnami/minideb
        TAG: ["latest", "bullseye", "buster"]
        REGISTRY_NAME: minideb
  retry: 1
  before_script:
    - IMAGE_NAME="${REGISTRY_USER}/${REGISTRY_NAME}:${TAG}"
    - buildah login -u ${REGISTRY_USER} -p ${REGISTRY_TOKEN} docker.io
  script:
    - >
      buildah bud \
        -f ./Dockerfile \
        -t ${IMAGE_NAME} \
        --build-arg IMAGE=${IMAGE} \
        --build-arg TAG=${TAG} \
        --label org.wakemeops.maintainers="WakeMeOps <wakemeops.com>" \
        --label org.wakemeops.base_image="docker.io/${IMAGE}:${TAG}" \
        --label org.wakemeops.commit="${CI_COMMIT_SHA}" \
        .
    - buildah push --authfile /run/containers/0/auth.json ${IMAGE_NAME}
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE != "schedule"'
      changes:
        - Dockerfile
        - .gitlab-ci.yml
        - assets/**/*
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $BUILD_IMAGES == "1"'
